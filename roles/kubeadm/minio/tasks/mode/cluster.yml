# - name: deploy tenant
- name: Create directory
  file:
    path: "/server/tools/{{ role_service_name }}/helm/tenant/"
    state: directory

- name: Copy minio-tenant helm chart file
  copy:
    src: "{{ inventory_dir }}/roles/kubeadm/{{ role_service_name }}/files/tenant-{{ helm_chart.version }}.tgz"
    dest: "/server/tools/{{ role_service_name }}/helm/tenant/tenant-{{ helm_chart.version }}.tgz"
    owner: root
    group: root
    mode: 0644

- name: Write minio-tenant template to file
  template:
    src: "{{ inventory_dir }}/roles/kubeadm/{{ role_service_name }}/templates/{{ item.src }}.j2"
    dest: "/server/tools/{{ role_service_name }}/helm/tenant/{{ item.dest }}"
    owner: root
    group: root
    mode: 0644
  with_items:
    - { src: "tenant.yml", dest: "tenant-{{ deploy_item.name }}.yml" }

- name: include_role cert-manager mtls in minio-tenant
  include_tasks: "{{ inventory_dir }}/roles/kubeadm/cert-manager/tasks/issue/mtls.yml"
  vars:
    args_deploy: "{{ deploy_item }}"
    args_role_service_name: "{{ role_service_name }}"
    args_mtls_domain:
      - "minio-console-{{ args_deploy.name }}-{{ domain_name_join }}"
      - "minio-api-{{ args_deploy.name }}-{{ domain_name_join }}"
      - "*.{{ args_deploy.namespace }}.svc.cluster.local"
      - "*.{{ args_deploy.name }}.{{ args_deploy.namespace }}.svc.cluster.local"
      - "*.{{ args_deploy.name }}-hl.{{ args_deploy.namespace }}.svc.cluster.local"
  when:
    - deploy_item.tls.enabled == true
    - deploy_item.tls.type == "cert-manager"

- name: Deploy minio-tenant chart from local path
  kubernetes.core.helm:
    name: "{{ deploy_item.name }}"
    chart_ref: "/server/tools/{{ role_service_name }}/helm/tenant/tenant-{{ helm_chart.version }}.tgz"
    release_namespace: "{{ deploy_item.namespace }}"
    create_namespace: yes
    values_files:
      - "/server/tools/{{ role_service_name }}/helm/tenant/tenant-{{ deploy_item.name }}.yml"